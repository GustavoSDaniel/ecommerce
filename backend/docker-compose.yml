services:

  backend:
    build: .
    container_name: ./backend
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/seu-realm
      - SPRING_PROFILES_ACTIVE=local
    ports:
      - "5055:8080"
    depends_on:
      - db-ecommerce
      - keycloak
      - redis
    networks:
      - ecommerce-network

  caddy:
    image: caddy:builder-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
        - caddy_data:/data
        - caddy_config:/config
    networks:
        - ecommerce-network

  db-ecommerce:
    image: postgres:17-alpine
    container_name: db-ecommerce
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5051:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    container_name: keycloak
    environment:
      # --- Variáveis de Banco de Dados ---
      KC_DB: postgres
      KC_DB_URL_HOST: db-keycloak
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_USER_DB}
      KC_DB_PASSWORD: ${KEYCLOAK_PASSWORD_DB}
      # --- Variáveis de Admin ---
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      KC_PROXY: edge
      KC_HOSTNAME_STRICT_HTTPS: false
    command: start-dev
    ports:
      - "5052:8080"
    depends_on:
      - db-keycloak
    networks:
      - ecommerce-network


  db-keycloak:
    image: postgres:17-alpine
    container_name: db-keycloak
    environment:
      POSTGRES_USER: ${KEYCLOAK_USER_DB}
      POSTGRES_PASSWORD: ${KEYCLOAK_PASSWORD_DB}
      POSTGRES_DB: ${KEYCLOAK_DB}
    ports:
      - "5053:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - ecommerce-network

  redis:
    image: redis:8.0.4-alpine3.21
    container_name: redis
    restart: always
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "5054:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  redis-commander:
    image: redis/redisinsight:2.70.1-arm64
    container_name: redis-redisinsight
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "5056:8081"
    depends_on:
      - redis
    networks:
      - ecommerce-network


networks:
  ecommerce-network:
    driver: bridge


volumes:
  postgres_data:
  keycloak_data:
  redis_data:
  caddy_data:
  caddy_config:
    driver: local