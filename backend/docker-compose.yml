services:

  backend:
    build: .
    container_name: backend
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/seu-realm
    ports:
      - "5055:5055"
    depends_on:
      - db-ecommerce
      - keycloak
    networks:
      - ecommerce-network

  db-ecommerce:
    image: postgres:17-alpine
    container_name: db-ecommerce
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5051:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    container_name: keycloak
    environment:
      # --- Variáveis de Banco de Dados ---
      KC_DB: postgres
      KC_DB_URL_HOST: db-keycloak
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_USER_DB}
      KC_DB_PASSWORD: ${KEYCLOAK_PASSWORD_DB}
      # --- Variáveis de Admin ---
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      KC_PROXY: edge
      KC_HOSTNAME_STRICT_HTTPS: false
    command: start-dev
    ports:
      - "5052:8080"
    depends_on:
      - db-keycloak
    networks:
      - ecommerce-network


  db-keycloak:
    image: postgres:17-alpine
    container_name: db-keycloak
    environment:
      POSTGRES_USER: ${KEYCLOAK_USER_DB}
      POSTGRES_PASSWORD: ${KEYCLOAK_PASSWORD_DB}
      POSTGRES_DB: ${KEYCLOAK_DB}
    ports:
      - "5053:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge


volumes:
  postgres_data:
  keycloak_data:
    driver: local